# input is string tokenize with the lexer
# output is the expected series of tokens
# format is as follows:
# === test name
# --- input
# string to send to tokenizer
# more string to send
# --- tokens
# NAME_OF_LEXEME_TYPE
# NAME_OF_NEXT_LEXEME_TYPE

=== floating point x.xx
--- input
9.03
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point .xx
--- input
.03
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point 0.xx
--- input
0.03
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point .xf
--- input
.3f
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point -x.x
--- input
-1.3
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point x.xex
--- input
4.3e5
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point x.xE-x
--- parse_struct
sp {neg-x-xE-x
	(state <s> ^foo 4.3E-5)
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point -x.xE-x
--- input
-4.3E-5
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point -x.xd
--- parse_struct
--- input
-4.3d
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point -x.xf
--- parse_struct
sp {neg-x-xf
	(state <s> ^foo -4.3f)
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point -x.xD
--- input
-4.3D
--- tokens
FLOAT_CONSTANT_LEXEME

=== floating point -x.xF
--- input
-4.3F
--- tokens
FLOAT_CONSTANT_LEXEME